---
import type { ResumeData } from '../data/resume';

interface Props {
  data: ResumeData;
}

const { data } = Astro.props;

// Helper function to calculate duration
function calculateDuration(startDate: string, endDate: string): string {
  const start = new Date(startDate);
  const end = endDate === 'Present' ? new Date() : new Date(endDate);
  const diffTime = Math.abs(end.getTime() - start.getTime());
  const diffYears = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 365));
  const diffMonths = Math.floor((diffTime % (1000 * 60 * 60 * 24 * 365)) / (1000 * 60 * 60 * 24 * 30));
  
  if (diffYears > 0) {
    return `${diffYears} year${diffYears > 1 ? 's' : ''}${diffMonths > 0 ? ` ${diffMonths} month${diffMonths > 1 ? 's' : ''}` : ''}`;
  }
  return `${diffMonths} month${diffMonths > 1 ? 's' : ''}`;
}

// Helper function to format date
function formatDate(dateString: string): string {
  if (dateString === 'Present') return 'Present';
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });
}
---

<div class="bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-lg">
  <div class="flex items-center mb-6">
    <div class="w-3 h-3 bg-blue-500 rounded-full mr-4"></div>
    <h3 class="text-xl font-bold text-gray-900 dark:text-white">Experience</h3>
  </div>

  <div class="space-y-8">
    {data.experience.map(item => (
      <div class="relative pl-16">
        {item.logo && (
          <div class="absolute left-0 top-0 w-12 h-12 bg-white dark:bg-gray-700 rounded-full flex items-center justify-center shadow-md">
            <img src={item.logo} alt={`${item.company} logo`} class="w-8 h-8 object-contain" />
          </div>
        )}
        <div class="flex justify-between items-baseline mb-1">
          <h4 class="font-bold text-gray-800 dark:text-gray-200">{item.role}</h4>
          <p class="text-sm text-gray-500 dark:text-gray-400">{item.startDate} - {item.endDate}</p>
        </div>
        <p class="text-blue-600 dark:text-blue-400 font-medium mb-3">{item.company}</p>
        
        <ul class="space-y-2">
          {item.achievements.map(achievement => (
            <li class="flex items-start">
              <svg class="w-4 h-4 text-blue-500 mr-2 mt-1 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
              </svg>
              <span class="text-gray-600 dark:text-gray-300">{achievement}</span>
            </li>
          ))}
        </ul>
      </div>
    ))}
  </div>
</div> 